DROP TABLE users IF EXISTS;
DROP TABLE posts IF EXISTS;
DROP TABLE comments IF EXISTS;
DROP TABLE likes IF EXISTS;

create table users (
    id bigint generated by default as identity,
    create_date timestamp,
    modified_date timestamp,
    email varchar(255) not null,
    name varchar(255) not null,
    user_name varchar(255) not null,
    password varchar(255) not null,
    comment varchar(255) not null,
    profile_url varchar(255) not null,
    primary key (id)
);

create table posts (
    id bigint generated by default as identity,
    create_date timestamp,
    modified_date timestamp,
    contents varchar(255) not null,
    image_url varchar(255) not null,
    author_id bigint not null,
    primary key (id),
    foreign key (author_id) references users(id) on update cascade
);

create table comments (
    id bigint generated by default as identity,
    author_id varchar(255) not null,
    post_id varchar(255) not null,
    primary key (id),
    foreign key (author_id) references users(id) on update cascade,
    foreign key (post_id) references posts(id) on update cascade
);

create table likes (
    id bigint generated by default as identity,
    author_id varchar(255) not null,
    post_id varchar(255) not null,
    primary key (id),
    foreign key (author_id) references users(id) on update cascade,
    foreign key (post_id) references posts(id) on update cascade
);